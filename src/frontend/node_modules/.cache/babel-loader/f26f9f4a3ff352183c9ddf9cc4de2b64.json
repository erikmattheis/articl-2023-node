{"ast":null,"code":"import _asyncToGenerator from \"/Users/erikmattheis/Dropbox/articl/heroku/src/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"regenerator-runtime/runtime.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nexport default {\n  name: 'ForgotPass',\n  data: function data() {\n    return {\n      email: null,\n      emailInvalid: null,\n      errorMessage: '',\n      buttonDisabled: false,\n      result: null\n    };\n  },\n  methods: {\n    resetForm: function resetForm() {\n      this.emailInvalid = null;\n      this.result = null;\n    },\n    checkForm: function checkForm() {\n      return this.email !== '';\n    },\n    submitForm: function submitForm() {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _this.resetForm();\n\n                if (_this.checkForm() === true) {\n                  _this.buttonDisabled = true;\n\n                  _this.$http({\n                    method: 'POST',\n                    url: '/auth/forgot-password',\n                    data: {\n                      email: _this.email\n                    }\n                  }).then(function (result) {\n                    var _result$data;\n\n                    if (result !== null && result !== void 0 && (_result$data = result.data) !== null && _result$data !== void 0 && _result$data.message) {\n                      var _result$data2;\n\n                      _this.result = result === null || result === void 0 ? void 0 : (_result$data2 = result.data) === null || _result$data2 === void 0 ? void 0 : _result$data2.message;\n                    } else {\n                      _this.result = result.response;\n                    }\n                  }).catch(function (error) {\n                    _this.$store.dispatch('setError', error);\n                  }).finally(function () {\n                    _this.buttonDisabled = false;\n                  });\n                }\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    }\n  }\n};","map":{"version":3,"mappings":";;;AA2BA,eAAe;AACbA,MAAI,EAAE,YADO;AAEbC,MAFa,kBAEN;AACL,WAAO;AACLC,WAAK,EAAE,IADF;AAELC,kBAAY,EAAE,IAFT;AAGLC,kBAAY,EAAE,EAHT;AAILC,oBAAc,EAAE,KAJX;AAKLC,YAAM,EAAE;AALH,KAAP;AAOD,GAVY;AAWbC,SAAO,EAAE;AACPC,aADO,uBACK;AACV,WAAKL,YAAL,GAAoB,IAApB;AACA,WAAKG,MAAL,GAAc,IAAd;AACD,KAJM;AAKPG,aALO,uBAKK;AACV,aAAO,KAAKP,KAAL,KAAe,EAAtB;AACD,KAPM;AAQDQ,cARC,wBAQY;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACjB,qBAAI,CAACF,SAAL;;AACA,oBAAI,KAAI,CAACC,SAAL,OAAqB,IAAzB,EAA+B;AAC7B,uBAAI,CAACJ,cAAL,GAAsB,IAAtB;;AACA,uBAAI,CAACM,KAAL,CAAW;AACTC,0BAAM,EAAE,MADC;AAETC,uBAAG,EAAE,uBAFI;AAGTZ,wBAAI,EAAE;AACJC,2BAAK,EAAE,KAAI,CAACA;AADR;AAHG,mBAAX,EAOGY,IAPH,CAOQ,UAACR,MAAD,EAAY;AAAA;;AAChB,wBAAIA,MAAJ,aAAIA,MAAJ,+BAAIA,MAAM,CAAEL,IAAZ,yCAAI,aAAcc,OAAlB,EAA2B;AAAA;;AACzB,2BAAI,CAACT,MAAL,GAAcA,MAAd,aAAcA,MAAd,wCAAcA,MAAM,CAAEL,IAAtB,kDAAc,cAAcc,OAA5B;AACF,qBAFA,MAEO;AACL,2BAAI,CAACT,MAAL,GAAcA,MAAM,CAACU,QAArB;AACF;AACD,mBAbH,EAcGC,KAdH,CAcS,UAACC,KAAD,EAAW;AAChB,yBAAI,CAACC,MAAL,CAAYC,QAAZ,CAAqB,UAArB,EAAiCF,KAAjC;AACD,mBAhBH,EAiBGG,OAjBH,CAiBW,YAAM;AACb,yBAAI,CAAChB,cAAL,GAAsB,KAAtB;AACD,mBAnBH;AAoBF;;AAxBiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAyBlB;AAjCM;AAXI,CAAf","names":["name","data","email","emailInvalid","errorMessage","buttonDisabled","result","methods","resetForm","checkForm","submitForm","$http","method","url","then","message","response","catch","error","$store","dispatch","finally"],"sourceRoot":"","sources":["/Users/erikmattheis/Dropbox/articl/heroku/src/frontend/src/pages/forgot-pass.vue"],"sourcesContent":["<template>\n  <article>\n    <h1>Forgot password</h1>\n    <form v-if=\"!result\">\n      <label for=\"email\">Email</label>\n      <input\n        v-model=\"email\"\n        type=\"text\"\n        name=\"email\"\n        id=\"email\"\n        autocomplete=\"email\"\n      />\n      <button\n        type=\"submit\"\n        id=\"reset\"\n        :aria-busy=\"buttonDisabled\"\n        @click.prevent=\"submitForm()\"\n      >\n        <span v-if=\"!buttonDisabled\">Reset</span>\n      </button>\n    </form>\n    <p v-if=\"result\">{{ result }}</p>\n    <p v-if=\"errorMessage\" class=\"error\">{{ errorMessage }}</p>\n  </article>\n</template>\n\n<script>\nexport default {\n  name: 'ForgotPass',\n  data() {\n    return {\n      email: null,\n      emailInvalid: null,\n      errorMessage: '',\n      buttonDisabled: false,\n      result: null,\n    };\n  },\n  methods: {\n    resetForm() {\n      this.emailInvalid = null;\n      this.result = null;\n    },\n    checkForm() {\n      return this.email !== '';\n    },\n    async submitForm() {\n      this.resetForm();\n      if (this.checkForm() === true) {\n        this.buttonDisabled = true;\n        this.$http({\n          method: 'POST',\n          url: '/auth/forgot-password',\n          data: {\n            email: this.email,\n          },\n        })\n          .then((result) => {\n            if (result?.data?.message) {\n              this.result = result?.data?.message;\n            } else {\n              this.result = result.response;\n            }\n          })\n          .catch((error) => {\n            this.$store.dispatch('setError', error);\n          })\n          .finally(() => {\n            this.buttonDisabled = false;\n          });\n      }\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}