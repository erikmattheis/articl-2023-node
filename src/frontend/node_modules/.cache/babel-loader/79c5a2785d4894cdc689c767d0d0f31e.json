{"ast":null,"code":"import { createStore } from 'vuex';\nexport default createStore({\n  state() {\n    return {\n      user: undefined,\n      userId: undefined,\n      userFullName: undefined,\n      isEmailVerified: undefined,\n      accessTokenExpires: undefined,\n      accessTokenValue: undefined,\n      refreshTokenExpires: undefined,\n      refreshTokenValue: undefined,\n      isLoggedIn: undefined,\n      errorMessage: undefined,\n      errorTitle: undefined,\n      errorFileName: undefined,\n      errorLineNumber: undefined,\n      errorStack: undefined\n    };\n  },\n\n  mutations: {\n    SET_ACCESS_TOKEN_VALUE(state, payload) {\n      state.accessTokenValue = payload;\n    },\n\n    SET_ACCESS_TOKEN_EXPIRES(state, payload) {\n      state.accessTokenExpires = payload;\n    },\n\n    SET_REFRESH_TOKEN_VALUE(state, payload) {\n      state.refreshTokenValue = payload;\n    },\n\n    SET_REFRESH_TOKEN_EXPIRES(state, payload) {\n      state.refreshTokenExpires = payload;\n    },\n\n    SET_USER(state, payload) {\n      state.user = payload;\n    },\n\n    SET_ERROR_TITLE(state, payload) {\n      state.errorTitle = payload;\n    },\n\n    SET_ERROR_MESSAGE(state, payload) {\n      state.errorMessage = payload;\n    },\n\n    SET_ERROR_FILE_NAME(state, payload) {\n      state.errorFileName = payload;\n    },\n\n    SET_ERROR_LINE_NUMBER(state, payload) {\n      state.errorLineNumber = payload;\n    },\n\n    SET_ERROR_STACK(state, payload) {\n      state.errorStack = payload;\n    }\n\n  },\n  actions: {\n    logout(context) {\n      context.commit('SET_ACCESS_TOKEN_EXPIRES', '');\n      context.commit('SET_ACCESS_TOKEN_VALUE', '');\n      context.commit('SET_REFRESH_TOKEN_EXPIRES', '');\n      context.commit('SET_REFRESH_TOKEN_VALUE', '');\n    },\n\n    accessTokenExpires(context, payload) {\n      if (payload) {\n        context.commit('SET_ACCESS_TOKEN_EXPIRES', payload);\n      }\n    },\n\n    accessTokenValue(context, payload) {\n      if (payload) {\n        context.commit('SET_ACCESS_TOKEN_VALUE', payload);\n      }\n    },\n\n    refreshTokenExpires(context, payload) {\n      if (payload) {\n        context.commit('SET_REFRESH_TOKEN_EXPIRES', payload);\n      }\n    },\n\n    refreshTokenValue(context, payload) {\n      if (payload) {\n        context.commit('SET_REFRESH_TOKEN_VALUE', payload);\n      }\n    },\n\n    setUser(context, payload) {\n      context.commit('SET_USER', payload);\n    },\n\n    setError(context, payload) {\n      let errorTitle = 'Error';\n      let errorMessage = 'Unknown error';\n      let errorFileName = '';\n      let errorLineNumber = '';\n      let errorStack = '';\n\n      if (payload?.response?.data?.message) {\n        errorMessage = payload.response.data.message;\n      } else if (payload.message) {\n        errorMessage = payload.message;\n      } else if (typeof payload === 'string' && payload.length) {\n        errorMessage = payload;\n      }\n\n      if (payload?.response?.data?.fileName) {\n        errorFileName = payload.response.data.fileName;\n      } else if (payload.fileName) {\n        errorFileName = payload.fileName;\n      }\n\n      if (payload?.response?.data?.stack) {\n        errorStack = payload.response.data.stack;\n        errorStack = `${errorStack.slice(0, 100)} ${errorStack.slice(100)}`;\n      } else if (payload.stack) {\n        errorStack = payload.stack;\n      }\n\n      if (payload?.response?.data?.lineNumber) {\n        errorLineNumber = payload.response.data.lineNumber;\n      } else if (payload?.lineNumber) {\n        errorLineNumber = payload.message;\n      }\n\n      if (payload?.response?.data?.error && typeof payload?.response.data.error === 'string') {\n        errorTitle = payload?.response.data.error;\n      } else if (payload?.response?.data?.name) {\n        errorTitle = payload.response.data.name;\n      } else if (payload.name) {\n        errorTitle = payload.name;\n      }\n\n      context.commit('SET_ERROR_TITLE', errorTitle);\n      context.commit('SET_ERROR_MESSAGE', errorMessage);\n      context.commit('SET_ERROR_FILE_NAME', errorFileName);\n      context.commit('SET_ERROR_LINE_NUMBER', errorLineNumber);\n      context.commit('SET_ERROR_STACK', errorStack);\n    },\n\n    clearError(context) {\n      context.commit('SET_ERROR_TITLE', '');\n      context.commit('SET_ERROR_MESSAGE', '');\n      context.commit('SET_ERROR_FILE_NAME', '');\n      context.commit('SET_ERROR_LINE_NUMBER', '');\n      context.commit('SET_ERROR_STACK', '');\n    }\n\n  },\n  getters: {\n    user(state) {\n      return state.user;\n    },\n\n    userId(state) {\n      return state.user.id;\n    },\n\n    userFullName(state) {\n      return `${state.user.nameFirst} ${state.user.nameLast}`;\n    },\n\n    isEmailVerified(state) {\n      return state.user.isEmailVerified;\n    },\n\n    accessTokenExpires(state) {\n      return state.accessTokenExpires;\n    },\n\n    accessTokenValue(state) {\n      return state.accessTokenValue;\n    },\n\n    refreshTokenExpires(state) {\n      return state.refreshTokenExpires;\n    },\n\n    refreshTokenValue(state) {\n      return state.refreshTokenValue;\n    },\n\n    isLoggedIn(state) {\n      const now = Date.now();\n      return state.accessTokenExpires > now;\n    },\n\n    errorMessage(state) {\n      return state.errorMessage;\n    },\n\n    errorTitle(state) {\n      // console.error(state.error.title);\n      return state.errorTitle;\n    },\n\n    errorFileName(state) {\n      // console.error(state.error.fileName);\n      return state.errorFileName;\n    },\n\n    errorLineNumber(state) {\n      // console.error(state.error.lineNumber);\n      return state.errorLineNumber;\n    },\n\n    errorStack(state) {\n      return state.errorStack;\n    }\n\n  }\n});","map":{"version":3,"sources":["/Users/erikmattheis/Dropbox/articl/heroku/src/frontend/src/store/index.js"],"names":["createStore","state","user","undefined","userId","userFullName","isEmailVerified","accessTokenExpires","accessTokenValue","refreshTokenExpires","refreshTokenValue","isLoggedIn","errorMessage","errorTitle","errorFileName","errorLineNumber","errorStack","mutations","SET_ACCESS_TOKEN_VALUE","payload","SET_ACCESS_TOKEN_EXPIRES","SET_REFRESH_TOKEN_VALUE","SET_REFRESH_TOKEN_EXPIRES","SET_USER","SET_ERROR_TITLE","SET_ERROR_MESSAGE","SET_ERROR_FILE_NAME","SET_ERROR_LINE_NUMBER","SET_ERROR_STACK","actions","logout","context","commit","setUser","setError","response","data","message","length","fileName","stack","slice","lineNumber","error","name","clearError","getters","id","nameFirst","nameLast","now","Date"],"mappings":"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","sourcesContent":["import { createStore } from 'vuex';\n\nexport default createStore({\n  state() {\n    return {\n      user: undefined,\n      userId: undefined,\n      userFullName: undefined,\n      isEmailVerified: undefined,\n      accessTokenExpires: undefined,\n      accessTokenValue: undefined,\n      refreshTokenExpires: undefined,\n      refreshTokenValue: undefined,\n      isLoggedIn: undefined,\n      errorMessage: undefined,\n      errorTitle: undefined,\n      errorFileName: undefined,\n      errorLineNumber: undefined,\n      errorStack: undefined,\n    };\n  },\n  mutations: {\n    SET_ACCESS_TOKEN_VALUE(state, payload) {\n      state.accessTokenValue = payload;\n    },\n    SET_ACCESS_TOKEN_EXPIRES(state, payload) {\n      state.accessTokenExpires = payload;\n    },\n    SET_REFRESH_TOKEN_VALUE(state, payload) {\n      state.refreshTokenValue = payload;\n    },\n    SET_REFRESH_TOKEN_EXPIRES(state, payload) {\n      state.refreshTokenExpires = payload;\n    },\n    SET_USER(state, payload) {\n      state.user = payload;\n    },\n    SET_ERROR_TITLE(state, payload) {\n      state.errorTitle = payload;\n    },\n    SET_ERROR_MESSAGE(state, payload) {\n      state.errorMessage = payload;\n    },\n    SET_ERROR_FILE_NAME(state, payload) {\n      state.errorFileName = payload;\n    },\n    SET_ERROR_LINE_NUMBER(state, payload) {\n      state.errorLineNumber = payload;\n    },\n    SET_ERROR_STACK(state, payload) {\n      state.errorStack = payload;\n    },\n  },\n  actions: {\n    logout(context) {\n      context.commit('SET_ACCESS_TOKEN_EXPIRES', '');\n      context.commit('SET_ACCESS_TOKEN_VALUE', '');\n      context.commit('SET_REFRESH_TOKEN_EXPIRES', '');\n      context.commit('SET_REFRESH_TOKEN_VALUE', '');\n    },\n    accessTokenExpires(context, payload) {\n      if (payload) {\n        context.commit('SET_ACCESS_TOKEN_EXPIRES', payload);\n      }\n    },\n    accessTokenValue(context, payload) {\n      if (payload) {\n        context.commit('SET_ACCESS_TOKEN_VALUE', payload);\n      }\n    },\n    refreshTokenExpires(context, payload) {\n      if (payload) {\n        context.commit('SET_REFRESH_TOKEN_EXPIRES', payload);\n      }\n    },\n    refreshTokenValue(context, payload) {\n      if (payload) {\n        context.commit('SET_REFRESH_TOKEN_VALUE', payload);\n      }\n    },\n    setUser(context, payload) {\n      context.commit('SET_USER', payload);\n    },\n    setError(context, payload) {\n      let errorTitle = 'Error';\n      let errorMessage = 'Unknown error';\n      let errorFileName = '';\n      let errorLineNumber = '';\n      let errorStack = '';\n\n      if (payload?.response?.data?.message) {\n        errorMessage = payload.response.data.message;\n      } else if (payload.message) {\n        errorMessage = payload.message;\n      } else if (typeof payload === 'string' && payload.length) {\n        errorMessage = payload;\n      }\n\n      if (payload?.response?.data?.fileName) {\n        errorFileName = payload.response.data.fileName;\n      } else if (payload.fileName) {\n        errorFileName = payload.fileName;\n      }\n\n      if (payload?.response?.data?.stack) {\n        errorStack = payload.response.data.stack;\n        errorStack = `${errorStack.slice(0, 100)} ${errorStack.slice(100)}`;\n      } else if (payload.stack) {\n        errorStack = payload.stack;\n      }\n\n      if (payload?.response?.data?.lineNumber) {\n        errorLineNumber = payload.response.data.lineNumber;\n      } else if (payload?.lineNumber) {\n        errorLineNumber = payload.message;\n      }\n\n      if (payload?.response?.data?.error && typeof payload?.response.data.error === 'string') {\n        errorTitle = payload?.response.data.error;\n      } else if (payload?.response?.data?.name) {\n        errorTitle = payload.response.data.name;\n      } else if (payload.name) {\n        errorTitle = payload.name;\n      }\n\n      context.commit('SET_ERROR_TITLE', errorTitle);\n      context.commit('SET_ERROR_MESSAGE', errorMessage);\n      context.commit('SET_ERROR_FILE_NAME', errorFileName);\n      context.commit('SET_ERROR_LINE_NUMBER', errorLineNumber);\n      context.commit('SET_ERROR_STACK', errorStack);\n    },\n    clearError(context) {\n      context.commit('SET_ERROR_TITLE', '');\n      context.commit('SET_ERROR_MESSAGE', '');\n      context.commit('SET_ERROR_FILE_NAME', '');\n      context.commit('SET_ERROR_LINE_NUMBER', '');\n      context.commit('SET_ERROR_STACK', '');\n    },\n  },\n  getters: {\n    user(state) {\n      return state.user;\n    },\n    userId(state) {\n      return state.user.id;\n    },\n    userFullName(state) {\n      return `${state.user.nameFirst} ${state.user.nameLast}`;\n    },\n    isEmailVerified(state) {\n      return state.user.isEmailVerified;\n    },\n    accessTokenExpires(state) {\n      return state.accessTokenExpires;\n    },\n    accessTokenValue(state) {\n      return state.accessTokenValue;\n    },\n    refreshTokenExpires(state) {\n      return state.refreshTokenExpires;\n    },\n    refreshTokenValue(state) {\n      return state.refreshTokenValue;\n    },\n    isLoggedIn(state) {\n      const now = Date.now();\n      return state.accessTokenExpires > now;\n    },\n    errorMessage(state) {\n      return state.errorMessage;\n    },\n    errorTitle(state) {\n      // console.error(state.error.title);\n      return state.errorTitle;\n    },\n    errorFileName(state) {\n      // console.error(state.error.fileName);\n      return state.errorFileName;\n    },\n    errorLineNumber(state) {\n      // console.error(state.error.lineNumber);\n      return state.errorLineNumber;\n    },\n    errorStack(state) {\n      return state.errorStack;\n    },\n  },\n});\n"]},"metadata":{},"sourceType":"module"}