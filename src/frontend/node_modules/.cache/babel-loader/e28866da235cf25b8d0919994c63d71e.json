{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, withModifiers as _withModifiers, toDisplayString as _toDisplayString } from \"vue\";\n\nvar _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Forgot password\", -1);\n\nvar _hoisted_2 = {\n  key: 0\n};\n\nvar _hoisted_3 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"email\"\n}, \"Email\", -1);\n\nvar _hoisted_4 = [\"aria-busy\"];\nvar _hoisted_5 = {\n  key: 0\n};\nvar _hoisted_6 = {\n  key: 1\n};\nvar _hoisted_7 = {\n  key: 2,\n  class: \"error\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"article\", null, [_hoisted_1, !$data.result ? (_openBlock(), _createElementBlock(\"form\", _hoisted_2, [_hoisted_3, _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = function ($event) {\n      return $data.email = $event;\n    }),\n    type: \"text\",\n    name: \"email\",\n    id: \"email\",\n    autocomplete: \"email\"\n  }, null, 512), [[_vModelText, $data.email]]), _createElementVNode(\"button\", {\n    type: \"submit\",\n    id: \"reset\",\n    \"aria-busy\": $data.buttonDisabled,\n    onClick: _cache[1] || (_cache[1] = _withModifiers(function ($event) {\n      return $options.submitForm();\n    }, [\"prevent\"]))\n  }, [!$data.buttonDisabled ? (_openBlock(), _createElementBlock(\"span\", _hoisted_5, \"Reset\")) : _createCommentVNode(\"\", true)], 8, _hoisted_4)])) : _createCommentVNode(\"\", true), $data.result ? (_openBlock(), _createElementBlock(\"p\", _hoisted_6, _toDisplayString($data.result), 1)) : _createCommentVNode(\"\", true), $data.errorMessage ? (_openBlock(), _createElementBlock(\"p\", _hoisted_7, _toDisplayString($data.errorMessage), 1)) : _createCommentVNode(\"\", true)]);\n}","map":{"version":3,"mappings":";;8BAEIA,oBAAwB,IAAxB,EAAwB,IAAxB,EAAI,iBAAJ,EAAmB,EAAnB;;;;;;8BAEEA,oBAAgC,OAAhC,EAAgC;AAAzBC,KAAG,EAAC;AAAqB,CAAhC,EAAmB,OAAnB,EAAwB,EAAxB;;;;;;;;;;;AAkBqBC,OAAK,EAAC;;;uBArB/BC,oBAsBU,SAtBV,EAsBU,IAtBV,EAsBU,CArBRC,UAqBQ,GApBKC,8BAAbF,oBAiBO,MAjBP,EAiBOG,UAjBP,EAiBO,CAhBLC,UAgBK,kBAfLP,oBAME,OANF,EAME;;aALSK,cAAKG;MAKd;AAJAC,QAAI,EAAC,MAIL;AAHAC,QAAI,EAAC,OAGL;AAFAC,MAAE,EAAC,OAEH;AADAC,gBAAY,EAAC;AACb,GANF,6BACWP,cAcN,EARLL,oBAOS,QAPT,EAOS;AANPS,QAAI,EAAC,QAME;AALPE,MAAE,EAAC,OAKI;AAJN,iBAAWN,oBAIL;AAHNQ,WAAK;AAAA,aAAUC,qBAAV;AAAA,OAAoB,WAApB;AAGC,GAPT,IAMeT,sCAAbF,oBAAyC,MAAzC,EAAyCY,UAAzC,EAA6B,OAA7B,mCANF,gBAQK,CAjBP,kCAoBQ,EAFCV,8BAATF,oBAAiC,GAAjC,EAAiCa,UAAjC,EAAiCC,iBAAbZ,YAAa,CAAjC,EAA0B,CAA1B,kCAEQ,EADCA,oCAATF,oBAA2D,GAA3D,cAA2Dc,iBAAnBZ,kBAAmB,CAA3D,EAAoD,CAApD,kCACQ,CAtBV","names":["_createElementVNode","for","class","_createElementBlock","_hoisted_1","$data","_hoisted_2","_hoisted_3","$event","type","name","id","autocomplete","onClick","$options","_hoisted_5","_hoisted_6","_toDisplayString"],"sourceRoot":"","sources":["/Users/erikmattheis/Dropbox/articl/heroku/src/frontend/src/pages/forgot-pass.vue"],"sourcesContent":["<template>\n  <article>\n    <h1>Forgot password</h1>\n    <form v-if=\"!result\">\n      <label for=\"email\">Email</label>\n      <input\n        v-model=\"email\"\n        type=\"text\"\n        name=\"email\"\n        id=\"email\"\n        autocomplete=\"email\"\n      />\n      <button\n        type=\"submit\"\n        id=\"reset\"\n        :aria-busy=\"buttonDisabled\"\n        @click.prevent=\"submitForm()\"\n      >\n        <span v-if=\"!buttonDisabled\">Reset</span>\n      </button>\n    </form>\n    <p v-if=\"result\">{{ result }}</p>\n    <p v-if=\"errorMessage\" class=\"error\">{{ errorMessage }}</p>\n  </article>\n</template>\n\n<script>\nexport default {\n  name: 'ForgotPass',\n  data() {\n    return {\n      email: null,\n      emailInvalid: null,\n      errorMessage: '',\n      buttonDisabled: false,\n      result: null,\n    };\n  },\n  methods: {\n    resetForm() {\n      this.emailInvalid = null;\n      this.result = null;\n    },\n    checkForm() {\n      return this.email !== '';\n    },\n    async submitForm() {\n      this.resetForm();\n      if (this.checkForm() === true) {\n        this.buttonDisabled = true;\n        this.$http({\n          method: 'POST',\n          url: '/auth/forgot-password',\n          data: {\n            email: this.email,\n          },\n        })\n          .then((result) => {\n            if (result?.data?.message) {\n              this.result = result?.data?.message;\n            } else {\n              this.result = result.response;\n            }\n          })\n          .catch((error) => {\n            this.$store.dispatch('setError', error);\n          })\n          .finally(() => {\n            this.buttonDisabled = false;\n          });\n      }\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}