{"ast":null,"code":"import _asyncToGenerator from \"/Users/erikmattheis/Dropbox/articl/heroku/src/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"regenerator-runtime/runtime.js\";\n// import TheBreadcrumbs from '@/components/layout/TheBreadcrumbs.vue';\n// import CategoryChildren from '@/components/layout/CategoryChildren.vue';\nexport default {\n  name: 'HomePage',\n  // components: { TheBreadcrumbs, CategoryChildren },\n  data: function data() {\n    return {\n      isLoading: true,\n      slug: null,\n      title: '',\n      categories: []\n    };\n  },\n  created: function created() {\n    this.categories = this.fetchData('0');\n  },\n  methods: {\n    fetchData: function fetchData(slug) {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var category;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return _this.getCategoryPageBySlug(slug);\n\n              case 3:\n                category = _context.sent;\n                _this.categories = category.categories;\n                _context.next = 10;\n                break;\n\n              case 7:\n                _context.prev = 7;\n                _context.t0 = _context[\"catch\"](0);\n\n                _this.$store.dispatch('setError', _context.t0);\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 7]]);\n      }))();\n    },\n    getCategoryPageBySlug: function getCategoryPageBySlug(slug) {\n      return this.$http({\n        method: 'GET',\n        url: \"/d/\".concat(slug || '')\n      });\n    }\n  }\n};","map":{"version":3,"mappings":";;AAuBA;AACA;AAEA,eAAe;AACbA,MAAI,EAAE,UADO;AAEb;AACAC,MAHa,kBAGN;AACL,WAAO;AACLC,eAAS,EAAE,IADN;AAELC,UAAI,EAAE,IAFD;AAGLC,WAAK,EAAE,EAHF;AAILC,gBAAU,EAAE;AAJP,KAAP;AAMD,GAVY;AAWbC,SAXa,qBAWH;AACR,SAAKD,UAAL,GAAkB,KAAKE,SAAL,CAAe,GAAf,CAAlB;AACD,GAbY;AAcbC,SAAO,EAAE;AACDD,aADC,qBACSJ,IADT,EACe;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEK,KAAI,CAACM,qBAAL,CAA2BN,IAA3B,CAFL;;AAAA;AAEZO,wBAFY;AAGlB,qBAAI,CAACL,UAAL,GAAkBK,QAAQ,CAACL,UAA3B;AAHkB;AAAA;;AAAA;AAAA;AAAA;;AAKlB,qBAAI,CAACM,MAAL,CAAYC,QAAZ,CAAqB,UAArB;;AALkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOrB,KARM;AASPH,yBATO,iCASeN,IATf,EASqB;AAC1B,aAAO,KAAKU,KAAL,CAAW;AAChBC,cAAM,EAAE,KADQ;AAEhBC,WAAG,eAAQZ,IAAG,IAAK,EAAhB;AAFa,OAAX,CAAP;AAID;AAdM;AAdI,CAAf","names":["name","data","isLoading","slug","title","categories","created","fetchData","methods","getCategoryPageBySlug","category","$store","dispatch","$http","method","url"],"sourceRoot":"","sources":["/Users/erikmattheis/Dropbox/articl/heroku/src/frontend/src/pages/index.vue"],"sourcesContent":["<template>\n  <article>\n    <h2>{{title}}</h2>\n        <ul>\n\n            <li v-for=\"category in categories || []\" :key=\"category.slug\">\n              <router-link :to=\"{ name: 'CategoryPage', params: { slug: category.slug }}\">\n              {{category.title}}\n              </router-link>\n            </li>\n\n          <li>\n            <router-link :to=\"{ name: 'createCategoryPage', params: { slug: '0' }}\">\n              New Category\n            </router-link>\n          </li>\n\n        </ul>\n\n  </article>\n</template>\n\n<script>\n// import TheBreadcrumbs from '@/components/layout/TheBreadcrumbs.vue';\n// import CategoryChildren from '@/components/layout/CategoryChildren.vue';\n\nexport default {\n  name: 'HomePage',\n  // components: { TheBreadcrumbs, CategoryChildren },\n  data() {\n    return {\n      isLoading: true,\n      slug: null,\n      title: '',\n      categories: [],\n    };\n  },\n  created() {\n    this.categories = this.fetchData('0');\n  },\n  methods: {\n    async fetchData(slug) {\n      try {\n        const category = await this.getCategoryPageBySlug(slug);\n        this.categories = category.categories;\n      } catch (error) {\n        this.$store.dispatch('setError', error);\n      }\n    },\n    getCategoryPageBySlug(slug) {\n      return this.$http({\n        method: 'GET',\n        url: `/d/${slug || ''}`,\n      });\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}