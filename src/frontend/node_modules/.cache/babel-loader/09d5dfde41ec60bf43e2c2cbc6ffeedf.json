{"ast":null,"code":"import { createApp } from 'vue';\nimport axios from 'axios';\nimport { getAccessTokenValue, getRefreshTokenValue, setTokensInLocalStorage, setTokensInVuex, convertStringDatesToMS } from '@/services/tokenService';\nimport router from './router';\nimport store from './store/index';\nimport App from './App.vue';\nconst app = createApp(App);\n\nfunction getAccessTokenFromRefreshToken() {\n  const refreshToken = getRefreshTokenValue();\n  return app.config.globalProperties.$http({\n    method: 'POST',\n    url: '/auth/refresh-tokens',\n    data: {\n      refreshToken\n    }\n  });\n}\n\napp.config.globalProperties.$http = axios.create({\n  baseURL: 'http://localhost:3000/v1'\n});\napp.config.globalProperties.$http.interceptors.request.use(request => {\n  const req = request;\n  const accessTokenValue = getAccessTokenValue(); // console.log('should always trace', accessTokenValue);\n\n  if (accessTokenValue) {\n    req.headers.Authorization = `Bearer ${accessTokenValue}`;\n  }\n\n  return Promise.resolve(req);\n}, error => Promise.reject(error));\n\nfunction handleLoginSuccess(serverResult) {\n  if (serverResult.code > 309) {\n    this.$store.dispatch('setError', serverResult);\n    return;\n  }\n\n  const result = convertStringDatesToMS(serverResult);\n  setTokensInLocalStorage(result.data.tokens);\n  setTokensInVuex(result.data.tokens);\n\n  if (this.$route.query.redirect && this.$route.query.redirect !== '/login') {\n    this.$router.push({\n      path: this.$route.query.redirect\n    });\n  } else {\n    this.$router.push({\n      name: 'HomePage'\n    });\n  }\n}\n\nconst handleResponseError = async error => {\n  if (error?.response?.status) {\n    switch (error.response.status) {\n      case 400:\n        break;\n\n      case 401:\n        if (router.currentRoute.value.name === 'login') {\n          return Promise.reject(error.response.data);\n        }\n\n        router.push({\n          name: 'login',\n          query: {\n            redirect: window.location.pathname + window.location.search\n          }\n        });\n        break;\n\n      case 403:\n        {\n          try {\n            const result = await getAccessTokenFromRefreshToken();\n            handleLoginSuccess(result);\n          } catch (err) {\n            return Promise.reject(err.response.data);\n          }\n          /*\n          router.push({\n            name: 'login',\n            query: { redirect: window.location.pathname + window.location.search },\n          });\n          */\n\n\n          break;\n        }\n\n      case 502:\n        this.$store.dispatch('setError', error);\n        break;\n\n      default:\n        // maybe like this\n        // console.log('err', error);\n        store.dispatch('setError', error);\n        break;\n    }\n  }\n\n  return Promise.reject(error);\n};\n\napp.config.globalProperties.$http.interceptors.response.use(response => {\n  if (response.status === 200 || response.status === 201) {\n    return Promise.resolve(response);\n  }\n\n  return Promise.reject(response);\n}, handleResponseError);\napp.use(router);\napp.use(store);\napp.mount('#app');","map":{"version":3,"sources":["/Users/erikmattheis/Dropbox/articl/heroku/src/frontend/src/main.js"],"names":["createApp","axios","getAccessTokenValue","getRefreshTokenValue","setTokensInLocalStorage","setTokensInVuex","convertStringDatesToMS","router","store","App","app","getAccessTokenFromRefreshToken","refreshToken","config","globalProperties","$http","method","url","data","create","baseURL","interceptors","request","use","req","accessTokenValue","headers","Authorization","Promise","resolve","error","reject","handleLoginSuccess","serverResult","code","$store","dispatch","result","tokens","$route","query","redirect","$router","push","path","name","handleResponseError","response","status","currentRoute","value","window","location","pathname","search","err","mount"],"mappings":"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","sourcesContent":["import { createApp } from 'vue';\nimport axios from 'axios';\nimport {\n  getAccessTokenValue, getRefreshTokenValue, setTokensInLocalStorage, setTokensInVuex,\n  convertStringDatesToMS,\n} from '@/services/tokenService';\nimport router from './router';\nimport store from './store/index';\nimport App from './App.vue';\n\nconst app = createApp(App);\n\nfunction getAccessTokenFromRefreshToken() {\n  const refreshToken = getRefreshTokenValue();\n  return app.config.globalProperties.$http({\n    method: 'POST',\n    url: '/auth/refresh-tokens',\n    data: {\n      refreshToken,\n    },\n  });\n}\n\napp.config.globalProperties.$http = axios.create({\n  baseURL: 'http://localhost:3000/v1',\n});\n\napp.config.globalProperties.$http.interceptors.request.use(\n  (request) => {\n    const req = request;\n\n    const accessTokenValue = getAccessTokenValue();\n    // console.log('should always trace', accessTokenValue);\n    if (accessTokenValue) {\n      req.headers.Authorization = `Bearer ${accessTokenValue}`;\n    }\n    return Promise.resolve(req);\n  },\n\n  (error) => Promise.reject(error),\n);\n\nfunction handleLoginSuccess(serverResult) {\n  if (serverResult.code > 309) {\n    this.$store.dispatch('setError', serverResult);\n    return;\n  }\n  const result = convertStringDatesToMS(serverResult);\n  setTokensInLocalStorage(result.data.tokens);\n  setTokensInVuex(result.data.tokens);\n  if (\n    this.$route.query.redirect &&\nthis.$route.query.redirect !== '/login'\n  ) {\n    this.$router.push({\n      path: this.$route.query.redirect,\n    });\n  } else {\n    this.$router.push({\n      name: 'HomePage',\n    });\n  }\n}\n\nconst handleResponseError = async (error) => {\n  if (error?.response?.status) {\n    switch (error.response.status) {\n      case 400:\n        break;\n      case 401:\n        if (router.currentRoute.value.name === 'login') {\n          return Promise.reject(error.response.data);\n        }\n        router.push({\n          name: 'login',\n          query: { redirect: window.location.pathname + window.location.search },\n        });\n        break;\n      case 403: {\n        try {\n          const result = await getAccessTokenFromRefreshToken();\n          handleLoginSuccess(result);\n        } catch (err) {\n          return Promise.reject(err.response.data);\n        }\n\n        /*\n        router.push({\n          name: 'login',\n          query: { redirect: window.location.pathname + window.location.search },\n        });\n        */\n        break;\n      }\n      case 502:\n        this.$store.dispatch('setError', error);\n        break;\n      default:\n        // maybe like this\n        // console.log('err', error);\n        store.dispatch('setError', error);\n        break;\n    }\n  }\n  return Promise.reject(error);\n};\n\napp.config.globalProperties.$http.interceptors.response.use(\n  (response) => {\n    if (response.status === 200 || response.status === 201) {\n      return Promise.resolve(response);\n    }\n    return Promise.reject(response);\n  },\n  handleResponseError,\n);\n\napp.use(router);\napp.use(store);\n\napp.mount('#app');\n"]},"metadata":{},"sourceType":"module"}