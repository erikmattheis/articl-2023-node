{"ast":null,"code":"import TheButtonToggleHidden from '@/components/ui/TheButtonToggleHidden.vue';\nexport default {\n  name: 'PasswordReset',\n  components: {\n    TheButtonToggleHidden\n  },\n\n  data() {\n    return {\n      password: null,\n      passwordInvalid: null,\n      showPassword: false,\n      password2: null,\n      passwordInvalid2: null,\n      showPassword2: false,\n      buttonDisabled: false,\n      dataInvalid: null,\n      result: null,\n      message: null\n    };\n  },\n\n  methods: {\n    resetForm() {\n      this.passwordInvalid = null;\n      this.passwordInvalid2 = null;\n      this.dataInvalid = false;\n      this.success = null;\n      this.result = null;\n    },\n\n    checkForm() {\n      let passed = true;\n\n      if (this.password === '') {\n        this.passwordInvalid = true;\n        this.message += 'Password may not be empty';\n        passed = false;\n      }\n\n      if (this.password2 === '') {\n        this.passwordInvalid = true;\n        this.message += this.message && this.message.length ? ', ' : '';\n        this.message += 'Password confirmation may not be empty';\n        passed = false;\n      }\n\n      if (this.password !== this.password2) {\n        this.dataInvalid = true;\n        this.message += this.message && this.message.length ? ', ' : '';\n        this.message = 'Confirmation password does not match';\n        passed = false;\n      }\n\n      return passed;\n    },\n\n    async submitForm() {\n      const {\n        token\n      } = this.$route.query;\n\n      if (this.checkForm() === true) {\n        this.buttonDisabled = true;\n        this.$http({\n          method: 'POST',\n          url: '/auth/reset-password',\n          data: {\n            token,\n            password: this.password\n          }\n        }).then(() => {\n          this.result = 'You have successfully changed your password.';\n        }).catch(error => {\n          this.dataInvalid = true;\n          this.$store.dispatch('setError', error);\n        }).finally(() => {\n          this.buttonDisabled = false;\n        });\n      }\n    }\n\n  }\n};","map":{"version":3,"mappings":"AA6DA,OAAOA,qBAAP,MAAkC,2CAAlC;AAEA,eAAe;AACbC,MAAI,EAAE,eADO;AAEbC,YAAU,EAAE;AACVF;AADU,GAFC;;AAKbG,MAAI,GAAG;AACL,WAAO;AACLC,cAAQ,EAAE,IADL;AAELC,qBAAe,EAAE,IAFZ;AAGLC,kBAAY,EAAE,KAHT;AAILC,eAAS,EAAE,IAJN;AAKLC,sBAAgB,EAAE,IALb;AAMLC,mBAAa,EAAE,KANV;AAOLC,oBAAc,EAAE,KAPX;AAQLC,iBAAW,EAAE,IARR;AASLC,YAAM,EAAE,IATH;AAULC,aAAO,EAAE;AAVJ,KAAP;AAYD,GAlBY;;AAmBbC,SAAO,EAAE;AACPC,aAAS,GAAG;AACV,WAAKV,eAAL,GAAuB,IAAvB;AACA,WAAKG,gBAAL,GAAwB,IAAxB;AACA,WAAKG,WAAL,GAAmB,KAAnB;AACA,WAAKK,OAAL,GAAe,IAAf;AACA,WAAKJ,MAAL,GAAc,IAAd;AACD,KAPM;;AAQPK,aAAS,GAAG;AACV,UAAIC,MAAK,GAAI,IAAb;;AACA,UAAI,KAAKd,QAAL,KAAkB,EAAtB,EAA0B;AACxB,aAAKC,eAAL,GAAuB,IAAvB;AACA,aAAKQ,OAAL,IAAgB,2BAAhB;AACAK,cAAK,GAAI,KAAT;AACF;;AACA,UAAI,KAAKX,SAAL,KAAmB,EAAvB,EAA2B;AACzB,aAAKF,eAAL,GAAuB,IAAvB;AACA,aAAKQ,OAAL,IAAgB,KAAKA,OAAL,IAAgB,KAAKA,OAAL,CAAaM,MAA7B,GAAsC,IAAtC,GAA6C,EAA7D;AACA,aAAKN,OAAL,IAAgB,wCAAhB;AACAK,cAAK,GAAI,KAAT;AACF;;AACA,UAAI,KAAKd,QAAL,KAAkB,KAAKG,SAA3B,EAAsC;AACpC,aAAKI,WAAL,GAAmB,IAAnB;AACA,aAAKE,OAAL,IAAgB,KAAKA,OAAL,IAAgB,KAAKA,OAAL,CAAaM,MAA7B,GAAsC,IAAtC,GAA6C,EAA7D;AACA,aAAKN,OAAL,GAAe,sCAAf;AACAK,cAAK,GAAI,KAAT;AACF;;AACA,aAAOA,MAAP;AACD,KA5BM;;AA6BP,UAAME,UAAN,GAAmB;AACjB,YAAM;AAAEC;AAAF,UAAY,KAAKC,MAAL,CAAYC,KAA9B;;AACA,UAAI,KAAKN,SAAL,OAAqB,IAAzB,EAA+B;AAC7B,aAAKP,cAAL,GAAsB,IAAtB;AACA,aAAKc,KAAL,CAAW;AACTC,gBAAM,EAAE,MADC;AAETC,aAAG,EAAE,sBAFI;AAGTvB,cAAI,EAAE;AACJkB,iBADI;AAEJjB,oBAAQ,EAAE,KAAKA;AAFX;AAHG,SAAX,EAQGuB,IARH,CAQQ,MAAM;AACV,eAAKf,MAAL,GAAc,8CAAd;AACD,SAVH,EAYGgB,KAZH,CAYUC,KAAD,IAAW;AAChB,eAAKlB,WAAL,GAAmB,IAAnB;AACA,eAAKmB,MAAL,CAAYC,QAAZ,CAAqB,UAArB,EAAiCF,KAAjC;AACD,SAfH,EAgBGG,OAhBH,CAgBW,MAAM;AACb,eAAKtB,cAAL,GAAsB,KAAtB;AACD,SAlBH;AAmBF;AACD;;AArDM;AAnBI,CAAf","names":["TheButtonToggleHidden","name","components","data","password","passwordInvalid","showPassword","password2","passwordInvalid2","showPassword2","buttonDisabled","dataInvalid","result","message","methods","resetForm","success","checkForm","passed","length","submitForm","token","$route","query","$http","method","url","then","catch","error","$store","dispatch","finally"],"sourceRoot":"","sources":["/Users/erikmattheis/Dropbox/articl/heroku/src/frontend/src/pages/reset-password.vue"],"sourcesContent":["<template>\n  <article>\n    <h1>Reset password</h1>\n    <form ng-if=\"!result\">\n      <label for=\"password\"> New Password</label>\n      <div class=\"toggle-password\">\n        <input\n          v-if=\"showPassword\"\n          v-model=\"password\"\n          type=\"text\"\n          name=\"password\"\n          id=\"password\"\n        />\n        <input\n          v-if=\"!showPassword\"\n          v-model=\"password\"\n          type=\"password\"\n          name=\"password\"\n          id=\"password\"\n        />\n        <the-button-toggle-hidden\n          class=\"togglePasswordMask\"\n          @show-password=\"showPassword = !showPassword\"\n        ></the-button-toggle-hidden>\n      </div>\n      <label for=\"password2\"> Confirm Password</label>\n      <div class=\"toggle-password\">\n        <input\n          v-if=\"showPassword2\"\n          v-model=\"password2\"\n          type=\"text\"\n          name=\"password2\"\n          id=\"password2\"\n        />\n        <input\n          v-if=\"!showPassword2\"\n          v-model=\"password2\"\n          type=\"password\"\n          name=\"password\"\n          id=\"password2\"\n        />\n        <the-button-toggle-hidden\n          class=\"togglePasswordMask\"\n          @show-password=\"showPassword2 = !showPassword2\"\n        ></the-button-toggle-hidden>\n      </div>\n      <div v-if=\"dataInvalid\"></div>\n      <button\n        type=\"submit\"\n        id=\"reset\"\n        :aria-busy=\"buttonDisabled\"\n        @click.prevent=\"submitForm()\"\n      >\n        <span v-if=\"!buttonDisabled\">Reset Password</span>\n      </button>\n      <p v-if=\"result\" class=\"invalid\">{{ result }}</p>\n    </form>\n  </article>\n</template>\n\n<script>\nimport TheButtonToggleHidden from '@/components/ui/TheButtonToggleHidden.vue';\n\nexport default {\n  name: 'PasswordReset',\n  components: {\n    TheButtonToggleHidden,\n  },\n  data() {\n    return {\n      password: null,\n      passwordInvalid: null,\n      showPassword: false,\n      password2: null,\n      passwordInvalid2: null,\n      showPassword2: false,\n      buttonDisabled: false,\n      dataInvalid: null,\n      result: null,\n      message: null,\n    };\n  },\n  methods: {\n    resetForm() {\n      this.passwordInvalid = null;\n      this.passwordInvalid2 = null;\n      this.dataInvalid = false;\n      this.success = null;\n      this.result = null;\n    },\n    checkForm() {\n      let passed = true;\n      if (this.password === '') {\n        this.passwordInvalid = true;\n        this.message += 'Password may not be empty';\n        passed = false;\n      }\n      if (this.password2 === '') {\n        this.passwordInvalid = true;\n        this.message += this.message && this.message.length ? ', ' : '';\n        this.message += 'Password confirmation may not be empty';\n        passed = false;\n      }\n      if (this.password !== this.password2) {\n        this.dataInvalid = true;\n        this.message += this.message && this.message.length ? ', ' : '';\n        this.message = 'Confirmation password does not match';\n        passed = false;\n      }\n      return passed;\n    },\n    async submitForm() {\n      const { token } = this.$route.query;\n      if (this.checkForm() === true) {\n        this.buttonDisabled = true;\n        this.$http({\n          method: 'POST',\n          url: '/auth/reset-password',\n          data: {\n            token,\n            password: this.password,\n          },\n        })\n          .then(() => {\n            this.result = 'You have successfully changed your password.';\n          })\n\n          .catch((error) => {\n            this.dataInvalid = true;\n            this.$store.dispatch('setError', error);\n          })\n          .finally(() => {\n            this.buttonDisabled = false;\n          });\n      }\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}