{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withModifiers as _withModifiers, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-5457b6db\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  key: 0\n};\nconst _hoisted_2 = {\n  key: 1\n};\nconst _hoisted_3 = {\n  key: 2\n};\n\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"email\"\n}, \"Email\", -1));\n\nconst _hoisted_5 = {\n  for: \"password\"\n};\n\nconst _hoisted_6 = /*#__PURE__*/_createTextVNode(\"Password \");\n\nconst _hoisted_7 = {\n  key: 0,\n  class: \"lighter left-space\"\n};\nconst _hoisted_8 = {\n  key: 1,\n  class: \"lighter left-space\"\n};\nconst _hoisted_9 = {\n  class: \"toggle-password\"\n};\n\nconst _hoisted_10 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"password2\"\n}, \"Confirm Password\", -1));\n\nconst _hoisted_11 = {\n  class: \"toggle-password\"\n};\nconst _hoisted_12 = {\n  key: 0\n};\nconst _hoisted_13 = [\"aria-busy\"];\nconst _hoisted_14 = {\n  key: 0\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_the_button_toggle_hidden = _resolveComponent(\"the-button-toggle-hidden\");\n\n  const _component_card_notification = _resolveComponent(\"card-notification\");\n\n  return _openBlock(), _createElementBlock(\"article\", null, [!$data.success ? (_openBlock(), _createElementBlock(\"h1\", _hoisted_1, \"Create account\")) : (_openBlock(), _createElementBlock(\"h1\", _hoisted_2, \"Account created\")), !$data.success ? (_openBlock(), _createElementBlock(\"form\", _hoisted_3, [_hoisted_4, _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.email = $event),\n    type: \"text\",\n    name: \"email\",\n    id: \"email\",\n    autocomplete: \"email\"\n  }, null, 512), [[_vModelText, $data.email]]), _createElementVNode(\"label\", _hoisted_5, [_hoisted_6, $data.passwordComplexity < 3 ? (_openBlock(), _createElementBlock(\"small\", _hoisted_7, \" Please use uppercase and lowercase letters, digits and special characters.\")) : $data.password.length < 8 ? (_openBlock(), _createElementBlock(\"small\", _hoisted_8, \" Please use 8 or more characters. \")) : _createCommentVNode(\"\", true)]), _createElementVNode(\"div\", _hoisted_9, [$data.showPassword ? _withDirectives((_openBlock(), _createElementBlock(\"input\", {\n    key: 0,\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.password = $event),\n    type: \"text\",\n    name: \"password\",\n    id: \"password\",\n    autocomplete: \"new-password\"\n  }, null, 512)), [[_vModelText, $data.password]]) : _createCommentVNode(\"\", true), !$data.showPassword ? _withDirectives((_openBlock(), _createElementBlock(\"input\", {\n    key: 1,\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.password = $event),\n    type: \"password\",\n    name: \"password\",\n    id: \"password\",\n    autocomplete: \"new-password\"\n  }, null, 512)), [[_vModelText, $data.password]]) : _createCommentVNode(\"\", true), _createVNode(_component_the_button_toggle_hidden, {\n    class: \"togglePasswordMask\",\n    onShow: _cache[3] || (_cache[3] = $event => $data.showPassword = !$data.showPassword)\n  })]), _hoisted_10, _createElementVNode(\"div\", _hoisted_11, [$data.showPassword2 ? _withDirectives((_openBlock(), _createElementBlock(\"input\", {\n    key: 0,\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.password2 = $event),\n    type: \"text\",\n    name: \"password2\",\n    id: \"password2\",\n    autocomplete: \"new-password\"\n  }, null, 512)), [[_vModelText, $data.password2]]) : _createCommentVNode(\"\", true), !$data.showPassword2 ? _withDirectives((_openBlock(), _createElementBlock(\"input\", {\n    key: 1,\n    \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $data.password2 = $event),\n    type: \"password\",\n    name: \"password2\",\n    id: \"password2\",\n    autocomplete: \"new-password\"\n  }, null, 512)), [[_vModelText, $data.password2]]) : _createCommentVNode(\"\", true), _createVNode(_component_the_button_toggle_hidden, {\n    class: \"togglePasswordMask\",\n    onShow: _cache[6] || (_cache[6] = $event => $data.showPassword2 = !$data.showPassword2)\n  })]), $data.passwordInvalid ? (_openBlock(), _createElementBlock(\"div\", _hoisted_12)) : _createCommentVNode(\"\", true), _createElementVNode(\"button\", {\n    type: \"submit\",\n    id: \"Login\",\n    \"aria-busy\": $data.buttonDisabled,\n    onClick: _cache[7] || (_cache[7] = _withModifiers($event => $options.submitForm(), [\"prevent\"]))\n  }, [!$data.buttonDisabled ? (_openBlock(), _createElementBlock(\"span\", _hoisted_14, \"Create Account\")) : _createCommentVNode(\"\", true)], 8, _hoisted_13)])) : (_openBlock(), _createBlock(_component_card_notification, {\n    key: 3,\n    \"success-message\": \"Congradulations! Please check\\n    your email to verify your email address\"\n  }))]);\n}","map":{"version":3,"mappings":"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","names":["_createElementVNode","for","class","_createElementBlock","$data","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","$event","type","name","id","autocomplete","length","_createVNode","_component_the_button_toggle_hidden","onShow","_hoisted_10","_hoisted_12","onClick","$options","_hoisted_14","_createBlock","_component_card_notification"],"sourceRoot":"","sources":["/Users/erikmattheis/Dropbox/articl/heroku/src/frontend/src/pages/register.vue"],"sourcesContent":["<template>\n  <article>\n    <h1 v-if=\"!success\">Create account</h1>\n    <h1 v-else>Account created</h1>\n    <form v-if=\"!success\">\n      <label for=\"email\">Email</label>\n      <input\n        v-model=\"email\"\n        type=\"text\"\n        name=\"email\"\n        id=\"email\"\n        autocomplete=\"email\"\n      />\n      <label for=\"password\">Password\n        <small class=\"lighter left-space\" v-if=\"passwordComplexity < 3\">\n          Please use uppercase and lowercase letters,\n        digits and special characters.</small>\n      <small class=\"lighter left-space\" v-else-if=\"password.length < 8\">\n        Please use 8 or more characters.\n        </small>\n      </label>\n      <div class=\"toggle-password\">\n        <input\n          v-if=\"showPassword\"\n          v-model=\"password\"\n          type=\"text\"\n          name=\"password\"\n          id=\"password\"\n          autocomplete=\"new-password\"\n        />\n        <input\n          v-if=\"!showPassword\"\n          v-model=\"password\"\n          type=\"password\"\n          name=\"password\"\n          id=\"password\"\n          autocomplete=\"new-password\"\n        />\n        <the-button-toggle-hidden\n          class=\"togglePasswordMask\"\n          @show=\"showPassword = !showPassword\"\n        ></the-button-toggle-hidden>\n      </div>\n      <label for=\"password2\">Confirm Password</label>\n      <div class=\"toggle-password\">\n        <input\n          v-if=\"showPassword2\"\n          v-model=\"password2\"\n          type=\"text\"\n          name=\"password2\"\n          id=\"password2\"\n          autocomplete=\"new-password\"\n        />\n        <input\n          v-if=\"!showPassword2\"\n          v-model=\"password2\"\n          type=\"password\"\n          name=\"password2\"\n          id=\"password2\"\n          autocomplete=\"new-password\"\n        />\n        <the-button-toggle-hidden\n          class=\"togglePasswordMask\"\n          @show=\"showPassword2 = !showPassword2\"\n        ></the-button-toggle-hidden>\n      </div>\n      <div v-if=\"passwordInvalid\"></div>\n      <button\n        type=\"submit\"\n        id=\"Login\"\n        :aria-busy=\"buttonDisabled\"\n        @click.prevent=\"submitForm()\"\n      >\n        <span v-if=\"!buttonDisabled\">Create Account</span>\n      </button>\n    </form>\n    <card-notification v-else success-message=\"Congradulations! Please check\n    your email to verify your email address\"></card-notification>\n  </article>\n</template>\n\n<script>\nimport TheButtonToggleHidden from '@/components/ui/TheButtonToggleHidden.vue';\nimport CardNotification from '@/components/ui/CardNotification.vue';\n\nexport default {\n  name: 'RegisterPage',\n  components: {\n    TheButtonToggleHidden,\n    CardNotification,\n  },\n  data() {\n    return {\n      email: null,\n      emailInvalid: null,\n      password: null,\n      passwordInvalid: null,\n      showPassword: false,\n      password2: null,\n      passwordInvalid2: null,\n      showPassword2: false,\n      buttonDisabled: false,\n      passwordMismatch: false,\n      passwordComplexity: 0,\n      errorMessage: '',\n      success: false,\n      result: null,\n      chrs: 0,\n    };\n  },\n  watch: {\n    password: {\n      handler(val) {\n        this.passwordComplexity = this.scoreChars(val);\n      },\n    },\n  },\n  methods: {\n    charCounts(val) {\n      return {\n        numUpper: val.length - val.replace(/[A-Z]/g, '').length,\n        numLower: val.length - val.replace(/[a-z]/g, '').length,\n        numDigit: val.length - val.replace(/[0-9]/g, '').length,\n        numSpecial: val.length - val.replace(/\\W|_/g, '').length,\n      };\n    },\n    scoreChars(val) {\n      if (!val) {\n        return 0;\n      }\n      const chars = this.charCounts(val);\n      const a = chars.numUpper > 0 ? 1 : 0;\n      const b = chars.numLower > 0 ? 1 : 0;\n      const c = chars.numDigit > 0 ? 1 : 0;\n      const d = chars.numSpecial > 0 ? 1 : 0;\n      return a + b + c + d;\n    },\n    resetFormErrors() {\n      this.emailInvalid = false;\n      this.passwordInvalid = false;\n      this.passwordMismatch = false;\n      this.success = null;\n      this.result = null;\n      this.errorMessage = '';\n    },\n    checkForm() {\n      this.resetFormErrors();\n      let passed = true;\n      if (!this.validateEmail(this.email)) {\n        this.emailInvalid = true;\n        this.errorMessage = 'Please enter a valid email.';\n        passed = false;\n      } else if (this.scoreChars(this.password) < 3) {\n        this.passwordInvalid = true;\n        this.errorMessage = 'Please choose a more complex password.';\n        passed = false;\n      } else if (this.password && this.password.length < 8) {\n        this.passwordInvalid = true;\n        this.errorMessage = 'Please choose a longer password.';\n        passed = false;\n      } else if (this.password !== this.password2) {\n        this.passwordMismatch = true;\n        this.errorMessage = 'The password fields must match.';\n        passed = false;\n      }\n      return passed;\n    },\n    validateEmail(email) {\n      if (!email) {\n        return false;\n      }\n      return email.match(\n        // eslint-disable-next-line\n        /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n      );\n    },\n    async submitForm() {\n      this.resetFormErrors();\n      if (this.checkForm() === true) {\n        this.buttonDisabled = true;\n        this.$http({\n          method: 'POST',\n          url: '/auth/register',\n          data: {\n            nameFirst: this.nameFirst,\n            nameLast: this.nameLast,\n            password: this.password,\n            email: this.email,\n          },\n        })\n          .then((result) => {\n            if (result.data) {\n              this.success = true;\n              this.result = result.data;\n            }\n          })\n          .catch((error) => {\n            this.$store.dispatch('setError', error);\n          })\n          .finally(() => {\n            this.buttonDisabled = false;\n          });\n      } else {\n        this.$store.dispatch('setError', {\n          message: this.errorMessage,\n        });\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n.toggle-password {\n  position: relative;\n}\n\n.togglePasswordMask {\n  position: absolute;\n  right: 1rem;\n  top: 40%;\n  transform: translateY(-40%);\n  cursor: pointer;\n  height: 2.2rem;\n  width: 2.2rem;\n};\n\n.success {\n  border: 8px solid green;\n  background-color:honeydew;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}